// Given an integer array nums of length n where all the integers of nums are in the range [1, n] and each integer appears once or twice, return an array of all the integers that appears twice.
// You must write an algorithm that runs in O(n) time and uses only constant extra space.
// Example 1:
//    Input: nums = [4,3,2,7,8,2,3,1]
//    Output: [2,3]

class Solution {
    public List<Integer> findDuplicates(int[] nums) {
        List<Integer> li=new ArrayList<>();
        for(int i=0;i<nums.length;i++){
            int element=Math.abs(nums[i]);
            int idx=element-1;
            if(nums[idx]<0) li.add(element);
            else nums[idx]=-1*nums[idx];
        }
        return li;
    }
}  //tc- O(n), sc-O(1)

