// Given an integer array nums sorted in non-decreasing order, return an array of the squares of each number sorted in non-decreasing order.

class Solution {
    public int[] sortedSquares(int[] nums) {
        if(nums.length<2){
            nums[0]=nums[0]*nums[0];
            return nums;
        }
        int[] arr=new int[nums.length];
        int i=0,j=nums.length-1,k=arr.length-1;
        while(k>=0){
                int p=-nums[i];
                if((p*p)<=(nums[j]*nums[j])){
                    arr[k--]=nums[j]*nums[j];
                    j--;
                }
                else{
                    arr[k--]=nums[i]*nums[i];
                    i++;
                }       
        }
        return arr;
    }
}       // tc- O(n), sc- O(n)
 
