//You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]).
//Find two lines that together with the x-axis form a container, such that the container contains the most water.
//Return the maximum amount of water a container can store.
//Example 1:
//                   Input: height = [1,8,6,2,5,4,8,3,7]
//                   Output: 49

class Solution {
    public int maxArea(int[] nums) {
        int i=0,j=nums.length-1;   //initializing 2 pointers
        int ans=Integer.MIN_VALUE;    //taking variable ans to store maximum water stored initially as integer minimum value.
        while(i<j){
            int area=Math.min(nums[i],nums[j])*(j-i);    //finding area i.e. quantity of water can store
            ans=Math.max(ans,area);                      // updating value of ans
            if(nums[i]<nums[j]) i++;  
            else j--;
        }
        return ans;
    }
}
