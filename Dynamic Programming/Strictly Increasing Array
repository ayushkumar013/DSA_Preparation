//Given an array nums of n positive integers.
//Find the minimum number of operations required to modify the array such that array elements are in strictly increasing order.
//Changing a number to greater or lesser than original number is counted as one operation.
// Example 1:
//   Input: nums = [1, 2, 3, 6, 5, 4]
//   Output: 2

class Solution
{
    public int min_operations(int []nums)
    {
        int[] dp=new int[nums.length];
        Arrays.fill(dp,1);
        for(int i=1;i<nums.length;i++){
            for(int j=0;j<i;j++){
                if(nums[i]>nums[j] && i-j<=nums[i]-nums[j]){
                    dp[i]=Math.max(dp[i],dp[j]+1);
                }
            }
        }
        return nums.length- Arrays.stream(dp).max().getAsInt();
    }
}   //tc- O(n), sc- O(n)
