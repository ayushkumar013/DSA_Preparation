//Given the root of a binary tree, check whether it is a mirror of itself (i.e., symmetric around its center).
//Example 1:
//      Input: root = [1,2,2,3,4,4,3]
//      Output: 

class Solution {
    public boolean isSymmetric(TreeNode root) {
        if(root==null) return true;
        return ch(root.left,root.right);
    }
    static boolean ch(TreeNode l,TreeNode r){
        if(l==null&&r==null) return true;
        if(l==null||r==null) return false;
        if(l.val!=r.val) return false;
        return ch(l.left,r.right)&&ch(l.right,r.left);
    }
}      //time- O(n),  space- O(n)for skewed tree otherwise  O(h)
