//Given an array nums of distinct integers, return all the possible permutations. You can return the answer in any order.
//Example 1:
//    Input: nums = [1,2,3]
//    Output: [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]

class Solution {
    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> ans=new ArrayList<>();
        List<Integer> li=new ArrayList<>();
        help(ans,li,nums);
        return ans;
    }
    static void help(List<List<Integer>> ans,List<Integer> li,int[]nums){
        if(li.size()==nums.length){
            ans.add(new ArrayList<>(li));
            return;
        }
        for(int i:nums){
            if(li.contains(i)) continue;
            li.add(i);
            help(ans,li,nums);
            li.remove(li.size()-1);
        }
    }
}    //tc- O(n! * n),  sc- O(n)
