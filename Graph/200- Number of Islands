// Given an m x n 2D binary grid grid which represents a map of '1's (land) and '0's (water), return the number of islands.
// An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. 
// You may assume all four edges of the grid are all surrounded by water.

class Solution {
    static void solve(char[][] nums ,int i,int j){
        if(i<0 || j<0 || i>=nums.length || j>=nums[0].length || nums[i][j]=='0') return;
        nums[i][j]='0';
        solve(nums,i+1,j);
        solve(nums,i-1,j);
        solve(nums,i,j+1);
        solve(nums,i,j-1);
    }
    public int numIslands(char[][] grid) {
        int ans=0;
        for(int i=0;i<grid.length;i++){
            for(int j=0;j<grid[0].length;j++){
                if(grid[i][j]=='1'){
                    solve(grid,i,j);
                    ans++;
                }
            }
        }
        return ans;
    }
}
