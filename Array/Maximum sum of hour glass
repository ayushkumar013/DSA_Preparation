//Given two integers n, m and a 2D matrix mat of dimensions nxm, the task is to find the maximum sum of an hourglass.
//An hourglass is defined as a part of the matrix with the following form:
//Return -1 if any hourglass is not found.
// Example 1:
//               Input: n = 3, m = 3   mat = [[1, 2, 3],
                                             [4, 5, 6],
                                             [7, 8, 9]]
//               Output:   35

class Solution {
    int findMaxSum(int n, int m, int mat[][]) {
        if(n<=2 || m<=2) return -1;
        int ans=0;
        for(int i=0;i<n-2;i++){
            for(int j=0;j<m-2;j++){
int sum=mat[i][j]+mat[i][j+1]+mat[i][j+2]+mat[i+1][j+1]+mat[i+2][j]+mat[i+2][j+1]+mat[i+2][j+2];
                ans=Math.max(ans,sum);
            }
        }
        return ans;
    }
};
