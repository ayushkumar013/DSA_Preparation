//You are given a string s of even length. Split this string into two halves of equal lengths, and let a be the first half and b be the second half.
//Two strings are alike if they have the same number of vowels ('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'). Notice that s contains uppercase and lowercase letters.
//Return true if a and b are alike. Otherwise, return false.
//Example 1:
//          Input: s = "book"
//          Output: true

class Solution {
    public boolean halvesAreAlike(String s) {
        int a=0;   //pointer for first half 
        int b=s.length()/2;   //pointer for another half
        int c1=0;  //to store vowel count in first half
        int c2=0;  //to store vowel count in second half
        while(a<b){
            char ch=s.charAt(a);
            if(ch=='a' ||ch=='e'|| ch=='i'||ch=='o'||ch=='u'||ch=='A' ||ch=='E'|| ch=='I'||ch=='O'||ch=='U') c1++;
            a++;
        }
         while(b<s.length()){
            char ch=s.charAt(b);
            if(ch=='a' ||ch=='e'|| ch=='i'||ch=='o'||ch=='u'||ch=='A' ||ch=='E'|| ch=='I'||ch=='O'||ch=='U') c2++;
            b++;
        }
        return c1==c2;
    }
}          //time complexity- O(n),  space complexity- O(1)
