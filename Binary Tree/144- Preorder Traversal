//Given the root of a binary tree, return the preorder traversal of its nodes' values.
//Example 1:
//   Input: root = [1,null,2,3]
//   Output: [1,2,3]

class Solution {
    static void pre(TreeNode root,List<Integer> li){
        if(root==null) return ;
        li.add(root.val);
        pre(root.left,li);
        pre(root.right,li);
    }
    public List<Integer> preorderTraversal(TreeNode root) {
        List<Integer> li=new ArrayList<>();
        pre(root,li);
        return li;
    }
}    //time- O(n),  space- O(n)
