//Given an unsorted integer array nums. Return the smallest positive integer that is not present in nums.
// You must implement an algorithm that runs in O(n) time and uses O(1) auxiliary space.
//  Example 1:
//   Input: nums = [1,2,0]
//   Output: 3


class Solution {
    public int firstMissingPositive(int[] nums) {
        boolean one=false;
        for(int i=0;i<nums.length;i++){
            if(nums[i]==1) one=true;
            if(nums[i]<=0||nums[i]>nums.length) nums[i]=1;
        }
       if(!one) return 1;
       for(int i=0;i<nums.length;i++){
        int element=Math.abs(nums[i]);
        int idx=element-1;
        if(nums[idx]<0) continue;
     nums[idx]*=(-1);
       }
         
       for(int i=0;i<nums.length;i++){
        if(nums[i]>0) return i+1;
       }
       return nums.length+1;
    }
}   //tc- O(n), sc- O(1)
