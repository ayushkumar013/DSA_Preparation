//Given the root of a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom.
//Example 1:
//        Input: root = [1,2,3,null,5,null,4]
//        Output: [1,3,4]

class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> li=new ArrayList<>();
        pre(root,0,li);
        return li;
    }
    static void pre(TreeNode root,int level,List<Integer> li){
        if(root==null) return ;
        if(level==li.size()) li.add(root.val);
        pre(root.right,level+1,li);
        pre(root.left,level+1,li);
    }
}   //time- O(n),  space- O(n)due to skew tree 
