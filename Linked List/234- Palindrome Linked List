//Given the head of a singly linked list, return true if it is a palindrome or false otherwise.
// Example 1:
//   Input: head = [1,2,2,1]
//   Output: true

class Solution {
    public boolean isPalindrome(ListNode head) {
      ListNode fast=head;
      ListNode slow=head;
      ListNode pre=null;
      while(fast!=null && fast.next!=null){
        fast=fast.next.next;
        ListNode temp=slow.next;
        slow.next=pre;
        pre=slow;
        slow=temp;
      }  
      if(fast!=null) slow=slow.next;
      while(pre!=null && slow!=null){
        if(pre.val!=slow.val) return false;
        slow=slow.next;
        pre=pre.next;
      }
      if(pre!=null|| slow!=null) return false;
      return true;
    }
}   //tc-O(n), sc- O(n)
