// Given a string s of lower and upper case English letters.
// A good string is a string which doesn't have two adjacent characters s[i] and s[i + 1] where:
// Example 1:
//     Input: s = "leEeetcode"
//     Output: "leetcode"

class Solution {
    public String makeGood(String s) {
        StringBuilder sb=new StringBuilder();
        for(int i=0;i<s.length();i++){
            if(sb.length()>0&& Character.toLowerCase(s.charAt(i))==Character.toLowerCase(sb.charAt(sb.length()-1))){
                if(s.charAt(i)-32==sb.charAt(sb.length()-1) || s.charAt(i)+32==sb.charAt(sb.length()-1))
                sb.deleteCharAt(sb.length()-1);
                else sb.append(s.charAt(i));
            }
            else sb.append(s.charAt(i));
        }
        return sb.toString();
    }
}   //tc- O(n), sc- O(n)
